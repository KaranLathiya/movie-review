# GraphQL schema example
#
# https://gqlgen.com/getting-started/


input NewMovie {
  title: String!
  description: String!
}

input UpdateMovie {
  id: ID!
  title: String
  description: String
}

type Movie {
  id: ID!
  title: String
  description: String
  directorID: ID
  createdAt: Timestamp
  updatedAt: Timestamp
  updatedByUserID:ID
  reviews(limit: Int! = 25, offset: Int! = 0): [MovieReview]
  averageRating: Float
  director:String
  updatedBy:String
}

input MovieSearchFilter {
  title: String
  director:String
}

enum MovieSearchSort {
    NEWEST
    OLDEST
    TITLE_ASC
    TITLE_DESC
    AVERAGE_RATING_ASC
    AVERAGE_RATING_DESC
}

extend type Mutation {
  CreateMovie(input: NewMovie!): ID! @isAdmin @isAuthenticated
  UpdateMovie(input: UpdateMovie!): String! @isAdmin @isAuthenticated
  DeleteMovie(movieID: ID!): String! @isAdmin @isAuthenticated
}

extend type Query {
  SearchMovies(filter: MovieSearchFilter,sortBy: MovieSearchSort! = NEWEST, limit: Int! = 25, offset: Int! = 0): [Movie!]! @isAuthenticated
  FetchMovie(movieID: String!): Movie! @isAuthenticated
}

directive @isAuthenticated on FIELD_DEFINITION
directive @isAdmin on FIELD_DEFINITION

scalar Timestamp